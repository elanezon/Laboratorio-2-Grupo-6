sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 67.6186
Branch Predictor Power Consumption: 4.52313  (6.89%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.417965  (0.637%)
 Instruction Decode Power (W): 0.0159915
 RAT decode_power (W): 0.113514
 RAT wordline_power (W): 0.0307815
 RAT bitline_power (W): 0.246771
 DCL Comparators (W): 0.0109075
Instruction Window Power Consumption: 2.20432  (3.36%)
 tagdrive (W): 0.0943488
 tagmatch (W): 0.033695
 Selection Logic (W): 0.0134217
 decode_power (W): 0.0532503
 wordline_power (W): 0.0844643
 bitline_power (W): 1.92514
Load/Store Queue Power Consumption: 0.96318  (1.47%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 3.57247  (5.44%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 2.29754  (3.5%)
Total Clock Power: 25.2956  (38.5%)
Int ALU Power: 4.66013  (7.1%)
FP ALU Power: 14.281  (21.8%)
Instruction Cache Power Consumption: 1.5054  (2.29%)
 decode_power (W): 0.325528
 wordline_power (W): 0.057312
 bitline_power (W): 0.678088
 senseamp_power (W): 0.192
 tagarray_power (W): 0.252468
Itlb_power (W): 0.263823 (0.402%)
Data Cache Power Consumption: 3.01079  (4.59%)
 decode_power (W): 0.651055
 wordline_power (W): 0.114624
 bitline_power (W): 1.35618
 senseamp_power (W): 0.384
 tagarray_power (W): 0.504936
Dtlb_power (W): 0.900515 (1.37%)
Level 2 Cache Power Consumption: 1.72266 (2.63%)
 decode_power (W): 0.19487
 wordline_power (W): 0.0225599
 bitline_power (W): 0.886372
 senseamp_power (W): 0.096
 tagarray_power (W): 0.522856
sim: command line: sim-outorder -cache:dl1 dl1:256:32:1:l -cache:il1 il1:256:32:1:l -cache:il2 dl2 -cache:dl2 dl2:4096:32:1:l matrixmultiplyO2 

sim: simulation started @ Wed Mar 22 20:14:39 2023, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                  bimod # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:256:32:1:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       dl2:4096:32:1:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:256:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **
Result: 962122000
RESULT: PASS

sim: ** simulation statistics **
sim_num_insn                 110638 # total number of instructions committed
sim_num_refs                  20612 # total number of loads and stores committed
sim_num_loads                 16686 # total number of loads committed
sim_num_stores            3926.0000 # total number of stores committed
sim_num_branches              10536 # total number of branches committed
sim_elapsed_time                  1 # total simulation time in seconds
sim_inst_rate           110638.0000 # simulation speed (in insts/sec)
sim_total_insn               113862 # total number of instructions executed
sim_total_refs                21599 # total number of loads and stores executed
sim_total_loads               17604 # total number of loads executed
sim_total_stores          3995.0000 # total number of stores executed
sim_total_branches            10680 # total number of branches executed
sim_cycle                     63048 # total simulation time in cycles
sim_IPC                      1.7548 # instructions per cycle
sim_CPI                      0.5699 # cycles per instruction
sim_exec_BW                  1.8060 # total instructions (mis-spec + committed) per cycle
sim_IPB                     10.5009 # instruction per branch
IFQ_count                    180857 # cumulative IFQ occupancy
IFQ_fcount                    38582 # cumulative IFQ full count
ifq_occupancy                2.8686 # avg IFQ occupancy (insn's)
ifq_rate                     1.8060 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.5884 # avg IFQ occupant latency (cycle's)
ifq_full                     0.6119 # fraction of time (cycle's) IFQ was full
RUU_count                    746543 # cumulative RUU occupancy
RUU_fcount                    40996 # cumulative RUU full count
ruu_occupancy               11.8409 # avg RUU occupancy (insn's)
ruu_rate                     1.8060 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  6.5566 # avg RUU occupant latency (cycle's)
ruu_full                     0.6502 # fraction of time (cycle's) RUU was full
LSQ_count                    122268 # cumulative LSQ occupancy
LSQ_fcount                     1588 # cumulative LSQ full count
lsq_occupancy                1.9393 # avg LSQ occupancy (insn's)
lsq_rate                     1.8060 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  1.0738 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0252 # fraction of time (cycle's) LSQ was full
sim_slip                     993263 # total number of slip cycles
avg_sim_slip                 8.9776 # the average slip between issue and retirement
bpred_bimod.lookups           10721 # total number of bpred lookups
bpred_bimod.updates           10536 # total number of updates
bpred_bimod.addr_hits          9802 # total number of address-predicted hits
bpred_bimod.dir_hits           9953 # total number of direction-predicted hits (includes addr-hits)
bpred_bimod.misses              583 # total number of misses
bpred_bimod.jr_hits             472 # total number of address-predicted hits for JR's
bpred_bimod.jr_seen             486 # total number of JR's seen
bpred_bimod.jr_non_ras_hits.PP            1 # total number of address-predicted hits for non-RAS JR's
bpred_bimod.jr_non_ras_seen.PP            3 # total number of non-RAS JR's seen
bpred_bimod.bpred_addr_rate    0.9303 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_bimod.bpred_dir_rate    0.9447 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_bimod.bpred_jr_rate    0.9712 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_bimod.bpred_jr_non_ras_rate.PP    0.3333 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_bimod.retstack_pushes          523 # total number of address pushed onto ret-addr stack
bpred_bimod.retstack_pops          486 # total number of address popped off of ret-addr stack
bpred_bimod.used_ras.PP          483 # total number of RAS predictions used
bpred_bimod.ras_hits.PP          471 # total number of RAS hits
bpred_bimod.ras_rate.PP    0.9752 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses                 116189 # total number of accesses
il1.hits                     115554 # total number of hits
il1.misses                      635 # total number of misses
il1.replacements                389 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0055 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0033 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                  20645 # total number of accesses
dl1.hits                      20019 # total number of hits
dl1.misses                      626 # total number of misses
dl1.replacements                370 # total number of replacements
dl1.writebacks                  258 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0303 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0179 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0125 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl2.accesses                   1519 # total number of accesses
dl2.hits                        400 # total number of hits
dl2.misses                     1119 # total number of misses
dl2.replacements                261 # total number of replacements
dl2.writebacks                   53 # total number of writebacks
dl2.invalidations                 0 # total number of invalidations
dl2.miss_rate                0.7367 # miss rate (i.e., misses/ref)
dl2.repl_rate                0.1718 # replacement rate (i.e., repls/ref)
dl2.wb_rate                  0.0349 # writeback rate (i.e., wrbks/ref)
dl2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses                116189 # total number of accesses
itlb.hits                    116177 # total number of hits
itlb.misses                      12 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0001 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses                 20654 # total number of accesses
dtlb.hits                     20645 # total number of hits
dtlb.misses                       9 # total number of misses
dtlb.replacements                 0 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0004 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power             26351.8880 # total power usage of rename unit
bpred_power             285174.0730 # total power usage of bpred unit
window_power            138977.9307 # total power usage of instruction window
lsq_power                60726.5718 # total power usage of load/store queue
regfile_power           225237.2213 # total power usage of arch. regfile
icache_power            111545.6654 # total power usage of icache
dcache_power            246600.0375 # total power usage of dcache
dcache2_power           108610.1138 # total power usage of dcache2
alu_power              1194203.2267 # total power usage of alu
falu_power              900391.3217 # total power usage of falu
resultbus_power         144855.4839 # total power usage of resultbus
clock_power            1594839.6961 # total power usage of clock
avg_rename_power             0.4180 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             2.2043 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             1.7692 # avg power usage of icache
avg_dcache_power             3.9113 # avg power usage of dcache
avg_dcache2_power            1.7227 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          2.2975 # avg power usage of resultbus
avg_clock_power             25.2956 # avg power usage of clock
fetch_stage_power       396719.7384 # total power usage of fetch stage
dispatch_stage_power     26351.8880 # total power usage of dispatch stage
issue_stage_power      1893973.3646 # total power usage of issue stage
avg_fetch_power              6.2923 # average power of fetch unit per cycle
avg_dispatch_power           0.4180 # average power of dispatch unit per cycle
avg_issue_power             30.0402 # average power of issue unit per cycle
total_power            4137121.9084 # total power per cycle
avg_total_power_cycle       65.6186 # average total power per cycle
avg_total_power_cycle_nofp_nod2      49.6149 # average total power per cycle
avg_total_power_insn        36.3345 # average total power per insn
avg_total_power_insn_nofp_nod2      27.4729 # average total power per insn
rename_power_cc1         16588.2142 # total power usage of rename unit_cc1
bpred_power_cc1          47167.1621 # total power usage of bpred unit_cc1
window_power_cc1        102968.6556 # total power usage of instruction window_cc1
lsq_power_cc1             9936.8425 # total power usage of lsq_cc1
regfile_power_cc1       137622.2687 # total power usage of arch. regfile_cc1
icache_power_cc1         79018.5899 # total power usage of icache_cc1
dcache_power_cc1         71995.4145 # total power usage of dcache_cc1
dcache2_power_cc1         2168.8259 # total power usage of dcache2_cc1
alu_power_cc1           216202.0924 # total power usage of alu_cc1
resultbus_power_cc1      89427.2857 # total power usage of resultbus_cc1
clock_power_cc1         531357.1903 # total power usage of clock_cc1
avg_rename_power_cc1         0.2631 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.7481 # avg power usage of bpred unit_cc1
avg_window_power_cc1         1.6332 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1576 # avg power usage of lsq_cc1
avg_regfile_power_cc1        2.1828 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.2533 # avg power usage of icache_cc1
avg_dcache_power_cc1         1.1419 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0344 # avg power usage of dcache2_cc1
avg_alu_power_cc1            3.4292 # avg power usage of alu_cc1
avg_resultbus_power_cc1       1.4184 # avg power usage of resultbus_cc1
avg_clock_power_cc1          8.4278 # avg power usage of clock_cc1
fetch_stage_power_cc1   126185.7519 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1   16588.2142 # total power usage of dispatch stage_cc1
issue_stage_power_cc1   492699.1165 # total power usage of issue stage_cc1
avg_fetch_power_cc1          2.0014 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.2631 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          7.8147 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  1304452.5417 # total power per cycle_cc1
avg_total_power_cycle_cc1      20.6898 # average total power per cycle_cc1
avg_total_power_insn_cc1      11.4564 # average total power per insn_cc1
rename_power_cc2         11878.1612 # total power usage of rename unit_cc2
bpred_power_cc2          23827.8299 # total power usage of bpred unit_cc2
window_power_cc2         86162.9875 # total power usage of instruction window_cc2
lsq_power_cc2             5353.3893 # total power usage of lsq_cc2
regfile_power_cc2        44562.0928 # total power usage of arch. regfile_cc2
icache_power_cc2         79018.5899 # total power usage of icache_cc2
dcache_power_cc2         40374.4589 # total power usage of dcache_cc2
dcache2_power_cc2         1308.3584 # total power usage of dcache2_cc2
alu_power_cc2           129484.0548 # total power usage of alu_cc2
resultbus_power_cc2      56446.7965 # total power usage of resultbus_cc2
clock_power_cc2         328002.8317 # total power usage of clock_cc2
avg_rename_power_cc2         0.1884 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.3779 # avg power usage of bpred unit_cc2
avg_window_power_cc2         1.3666 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0849 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.7068 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.2533 # avg power usage of icache_cc2
avg_dcache_power_cc2         0.6404 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0208 # avg power usage of dcache2_cc2
avg_alu_power_cc2            2.0537 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.8953 # avg power usage of resultbus_cc2
avg_clock_power_cc2          5.2024 # avg power usage of clock_cc2
fetch_stage_power_cc2   102846.4197 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2   11878.1612 # total power usage of dispatch stage_cc2
issue_stage_power_cc2   319130.0455 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.6312 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.1884 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          5.0617 # average power of issue unit per cycle_cc2
total_power_cycle_cc2   806419.5509 # total power per cycle_cc2
avg_total_power_cycle_cc2      12.7906 # average total power per cycle_cc2
avg_total_power_insn_cc2       7.0824 # average total power per insn_cc2
rename_power_cc3         12854.5285 # total power usage of rename unit_cc3
bpred_power_cc3          47628.9733 # total power usage of bpred unit_cc3
window_power_cc3         89292.3814 # total power usage of instruction window_cc3
lsq_power_cc3            10434.1124 # total power usage of lsq_cc3
regfile_power_cc3        51879.5874 # total power usage of arch. regfile_cc3
icache_power_cc3         82271.2974 # total power usage of icache_cc3
dcache_power_cc3         57841.9616 # total power usage of dcache_cc3
dcache2_power_cc3        11953.0040 # total power usage of dcache2_cc3
alu_power_cc3           227284.1682 # total power usage of alu_cc3
resultbus_power_cc3      60252.6763 # total power usage of resultbus_cc3
clock_power_cc3         431831.0822 # total power usage of clock_cc3
avg_rename_power_cc3         0.2039 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.7554 # avg power usage of bpred unit_cc3
avg_window_power_cc3         1.4163 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1655 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.8229 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.3049 # avg power usage of icache_cc3
avg_dcache_power_cc3         0.9174 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.1896 # avg power usage of dcache2_cc3
avg_alu_power_cc3            3.6049 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.9557 # avg power usage of resultbus_cc3
avg_clock_power_cc3          6.8492 # avg power usage of clock_cc3
fetch_stage_power_cc3   129900.2707 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3   12854.5285 # total power usage of dispatch stage_cc3
issue_stage_power_cc3   457058.3038 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.0603 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.2039 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          7.2494 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  1083523.7727 # total power per cycle_cc3
avg_total_power_cycle_cc3      17.1857 # average total power per cycle_cc3
avg_total_power_insn_cc3       9.5161 # average total power per insn_cc3
total_rename_access          113676 # total number accesses of rename unit
total_bpred_access            10536 # total number accesses of bpred unit
total_window_access          395206 # total number accesses of instruction window
total_lsq_access              20669 # total number accesses of load/store queue
total_regfile_access         165379 # total number accesses of arch. regfile
total_icache_access          116421 # total number accesses of icache
total_dcache_access           20645 # total number accesses of dcache
total_dcache2_access           1519 # total number accesses of dcache2
total_alu_access             111142 # total number accesses of alu
total_resultbus_access       117847 # total number accesses of resultbus
avg_rename_access            1.8030 # avg number accesses of rename unit
avg_bpred_access             0.1671 # avg number accesses of bpred unit
avg_window_access            6.2683 # avg number accesses of instruction window
avg_lsq_access               0.3278 # avg number accesses of lsq
avg_regfile_access           2.6231 # avg number accesses of arch. regfile
avg_icache_access            1.8465 # avg number accesses of icache
avg_dcache_access            0.3274 # avg number accesses of dcache
avg_dcache2_access           0.0241 # avg number accesses of dcache2
avg_alu_access               1.7628 # avg number accesses of alu
avg_resultbus_access         1.8692 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  3 # max number accesses of bpred unit
max_window_access                15 # max number accesses of instruction window
max_lsq_access                    4 # max number accesses of load/store queue
max_regfile_access                8 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                4 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              7 # max number accesses of resultbus
max_cycle_power_cc1         35.4212 # maximum cycle power usage of cc1
max_cycle_power_cc2         25.6106 # maximum cycle power usage of cc2
max_cycle_power_cc3         28.7684 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                  72512 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  13136 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   27 # total number of pages allocated
mem.page_mem                   108k # total size of memory pages allocated
mem.ptab_misses                  28 # total first level page table misses
mem.ptab_accesses           1091607 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate


Cache Parameters:
  Size in bytes: 16384
  Number of sets: 512
  Associativity: 4
  Block Size (bytes): 8

Access Time: 9.27925e-09
Cycle Time:  1.09081e-08

Best Ndwl (L1): 8
Best Ndbl (L1): 1
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 8.44162
 tag side (ns): 8.55667
 decode_data (ns): 5.29318
 wordline_data (ns): 1.03507
 bitline_data (ns): 0.810785
 sense_amp_data (ns): 0.58
 decode_tag (ns): 2.37065
 wordline_tag (ns): 1.36749
 bitline_tag (ns): 0.158246
 sense_amp_tag (ns): 0.26
 compare (ns): 2.42991
 mux driver (ns): 1.6125
 sel inverter (ns): 0.357877
 data output driver (ns): 0.722579
 total data path (with output driver) (ns): 7.71904
 total tag path is set assoc (ns): 8.55667
 precharge time (ns): 1.6289

Cache Parameters:
  Size in bytes: 8192
  Number of sets: 256
  Associativity: 1
  Block Size (bytes): 32

Access Time: 5.40271e-09
Cycle Time:  7.21028e-09

Best Ndwl (L1): 2
Best Ndbl (L1): 4
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 2

Time Components:
 data side (with Output driver) (ns): 5.21109
 tag side (ns): 5.40271
 decode_data (ns): 2.72742
 wordline_data (ns): 1.21374
 bitline_data (ns): 0.0138341
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.31146
 wordline_tag (ns): 0.766588
 bitline_tag (ns): 0.116078
 sense_amp_tag (ns): 0.26
 compare (ns): 2.36506
 valid signal driver (ns): 0.583518
 data output driver (ns): 0.676102
 total data path (with output driver) (ns): 4.53499
 total tag path is dm (ns): 5.40271
 precharge time (ns): 1.80757

Cache Parameters:
  Size in bytes: 8192
  Number of sets: 256
  Associativity: 1
  Block Size (bytes): 32

Access Time: 5.40271e-09
Cycle Time:  7.21028e-09

Best Ndwl (L1): 2
Best Ndbl (L1): 4
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 2

Time Components:
 data side (with Output driver) (ns): 5.21109
 tag side (ns): 5.40271
 decode_data (ns): 2.72742
 wordline_data (ns): 1.21374
 bitline_data (ns): 0.0138341
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.31146
 wordline_tag (ns): 0.766588
 bitline_tag (ns): 0.116078
 sense_amp_tag (ns): 0.26
 compare (ns): 2.36506
 valid signal driver (ns): 0.583518
 data output driver (ns): 0.676102
 total data path (with output driver) (ns): 4.53499
 total tag path is dm (ns): 5.40271
 precharge time (ns): 1.80757

Cache Parameters:
  Size in bytes: 131072
  Number of sets: 4096
  Associativity: 1
  Block Size (bytes): 32

Access Time: 8.89694e-09
Cycle Time:  1.14393e-08

Best Ndwl (L1): 2
Best Ndbl (L1): 4
Best Nspd (L1): 4
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 4

Time Components:
 data side (with Output driver) (ns): 8.75058
 tag side (ns): 8.89694
 decode_data (ns): 4.74975
 wordline_data (ns): 1.94849
 bitline_data (ns): 0.443199
 sense_amp_data (ns): 0.58
 decode_tag (ns): 3.61336
 wordline_tag (ns): 1.1871
 bitline_tag (ns): 0.491801
 sense_amp_tag (ns): 0.26
 compare (ns): 2.71377
 valid signal driver (ns): 0.630907
 data output driver (ns): 1.02914
 total data path (with output driver) (ns): 7.72144
 total tag path is dm (ns): 8.89694
 precharge time (ns): 2.54232
